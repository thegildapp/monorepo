apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: gildv2

# Default: Local Development
build:
  local:
    push: false
  artifacts:
    - image: backend-dev
      context: .
      docker:
        dockerfile: backend/Dockerfile.dev
      sync:
        manual:
          - src: "backend/src/**/*.ts"
            dest: /app/src
    - image: frontend-dev
      context: .
      docker:
        dockerfile: frontend/Dockerfile.dev
      sync:
        infer:
          - "frontend/src/**/*"
manifests:
  rawYaml:
    - k8s/database-secret.yaml
    - k8s/database-read-secret.yaml
    - k8s/logs-database-secret.yaml
    - k8s/spaces-secret.yaml
    - k8s/openai-secret.yaml
    - k8s/valkey-secret.yaml
    - k8s/sendgrid-secret.yaml
    - k8s/backend-deployment.yaml
    - k8s/frontend-deployment.yaml

deploy:
  kubeContext: kind-gild-dev
  kubectl:
    defaultNamespace: default

portForward:
  - resourceType: service
    resourceName: backend-service
    namespace: default
    port: 4000
    localPort: 4000
    address: 0.0.0.0
  - resourceType: service
    resourceName: frontend-service
    namespace: default
    port: 5173
    localPort: 5173
    address: 0.0.0.0

# Development Profile
profiles:
  - name: dev
    build:
      local:
        push: false
    deploy:
      kubectl:
        defaultNamespace: default

  # Production Profile
  - name: production
    build:
      artifacts:
        - image: ghcr.io/thegildapp/monorepo/backend
          context: .
          docker:
            dockerfile: backend/Dockerfile
            buildArgs:
              TARGETPLATFORM: linux/amd64
          platforms: ["linux/amd64"]
        - image: ghcr.io/thegildapp/monorepo/frontend
          context: .
          docker:
            dockerfile: frontend/Dockerfile
            buildArgs:
              TARGETPLATFORM: linux/amd64
              VITE_GRAPHQL_URL: "https://api.thegild.app/graphql"
              VITE_SPACES_ENDPOINT: "https://gild.sfo3.digitaloceanspaces.com"
          platforms: ["linux/amd64"]
    manifests:
      rawYaml:
        - k8s/database-secret.yaml
        - k8s/spaces-secret.yaml
        - k8s/valkey-secret.yaml
        - k8s/backend-deployment.prod.yaml
        - k8s/frontend-deployment.prod.yaml
        - k8s/ingress.yaml
        - k8s/letsencrypt-issuer.yaml
    deploy:
      kubeContext: do-sfo3-gildk8s
      kubectl:
        defaultNamespace: default
